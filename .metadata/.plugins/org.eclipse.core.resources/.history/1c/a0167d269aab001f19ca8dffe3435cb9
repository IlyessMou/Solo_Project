<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Job</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <style>
        #map {
            height: 400px;
            width: 100%;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Add Job</h1>
    <form action="/jobs" method="post">
        <label for="title">Title:</label>
        <input type="text" id="title" name="title" required />
        <br />
        <label for="description">Description:</label>
        <textarea id="description" name="description" required></textarea>
        <br />
        <label for="reward">Reward:</label>
        <input type="number" id="reward" name="reward" />
        <br />
        <label for="location">Location:</label>
        <input type="text" id="location" name="location" readonly required />
        <br />
        <label for="latitude">Latitude:</label>
        <input type="text" id="latitude" name="latitude" readonly required />
        <br />
        <label for="longitude">Longitude:</label>
        <input type="text" id="longitude" name="longitude" readonly required />
        <br />
        <button type="submit">Add Job</button>
    </form>

    <div id="map"></div>

 <script>
    // Set a default location for the map (San Francisco coordinates as an example)
    const defaultLat = 37.7749; // Latitude
    const defaultLng = -122.4194; // Longitude
    const map = L.map('map').setView([defaultLat, defaultLng], 13);

    // Add OpenStreetMap tiles to the map
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
    }).addTo(map);

    // Add a draggable marker
    const marker = L.marker([defaultLat, defaultLng], { draggable: true }).addTo(map);

    // Update the location fields when the marker is dragged
    marker.on('dragend', function (event) {
        const position = marker.getLatLng();
        const lat = position.lat;
        const lon = position.lng;

        // Debugging step to ensure lat and lon are correctly set
        console.log('Marker Position:', position);
        console.log('Latitude:', lat);
        console.log('Longitude:', lon);

        // Update the hidden latitude and longitude input fields
        document.getElementById('latitude').value = lat;
        document.getElementById('longitude').value = lon;

        // Construct the API URL using string concatenation
        const apiUrl = 'https://nominatim.openstreetmap.org/reverse?lat=' + lat + '&lon=' + lon + '&format=json&addressdetails=1';

        // Debugging step to ensure the API URL is correct
        console.log('API URL:', apiUrl);

        // Fetch the address from the reverse geocoding API
        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                if (data && data.address) {
                    // Extract multiple address components
                    const street = data.address.road || 'Street not found';
                    const city = data.address.city || data.address.town || data.address.village || 'City not found';
                    const state = data.address.state || 'State not found';
                    const country = data.address.country || 'Country not found';
                    const postalCode = data.address.postcode || 'Postal code not found';

                    // Combine the components into a full address
                    const fullAddress = `${street}, ${city}, ${state}, ${country}, ${postalCode}`;

                    // Set the full address in the location field
                    document.getElementById('location').value = fullAddress;

                    // For debugging, log the full address
                    console.log('Full Address:', fullAddress);
                } else {
                    document.getElementById('location').value = 'Address not found';
                }
            })
            .catch(error => {
                console.error('Error fetching address:', error);
                document.getElementById('location').value = 'Error fetching address';
            });
    });
</script>
 
 
  
  
  
   
</body>
</html>



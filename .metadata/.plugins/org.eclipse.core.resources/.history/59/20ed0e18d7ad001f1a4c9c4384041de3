<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Edit Job</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <style>
        #map {
            height: 400px;
            width: 100%;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Edit Job</h1>
    <form action="/jobs/${job.id}/update" method="post">
        <label>Title:</label>
        <input type="text" name="title" value="${job.title}" required />
        <br />
        <label>Description:</label>
        <textarea name="description" required>${job.description}</textarea>
        <br />
        <label>Location:</label>
        <input type="text" id="location" name="location" value="${job.location}" readonly />
        <br />
        <label>Latitude:</label>
        <input type="text" id="latitude" name="latitude" value="${job.latitude}" readonly />
        <br />
        <label>Longitude:</label>
        <input type="text" id="longitude" name="longitude" value="${job.longitude}" readonly />
        <br />
        <button type="submit">Update Job</button>
    </form>
    
    <form:form action="/jobs/${job.id}/update" method="post" modelAttribute="job">
    <div>
        <label for="title">Title:</label>
        <form:input path="title" id="title" value="${job.title}"  />
        <form:errors path="title" cssClass="error" />
    </div>
    <br />

    <div>
        <label for="description">Description:</label>
        <form:textarea path="description" id="description" />
        <form:errors path="description" cssClass="error" />
    </div>
    <br />

    <div>
        <label for="reward">Reward:</label>
        <form:input path="reward" id="reward" type="number" step="any"/>
        <form:errors path="reward" cssClass="error" />
    </div>
    <br />

    <div>
        <label for="location">Location:</label>
        <form:input path="location" id="location" readonly="true" />
        <form:errors path="location" cssClass="error" />
    </div>
    <br />

    <!-- Make latitude and longitude hidden -->
    <form:hidden path="latitude" id="latitude" />
    <form:hidden path="longitude" id="longitude" />
    <br />

    <button type="submit">Add Job</button>
</form:form>

    <div id="map"></div>

    <script>
        const defaultLat = ${job.latitude}; 
        const defaultLng = ${job.longitude}; 
        const map = L.map('map').setView([defaultLat, defaultLng], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
        }).addTo(map);

        const marker = L.marker([defaultLat, defaultLng], { draggable: true }).addTo(map);

        marker.on('dragend', function (event) {
            const position = marker.getLatLng();
            const lat = position.lat;
            const lon = position.lng;

            console.log('Marker Position:', position);
            console.log('Latitude:', lat);
            console.log('Longitude:', lon);

            // Update the hidden latitude and longitude fields
            document.getElementById('latitude').value = lat;
            document.getElementById('longitude').value = lon;

            const apiUrl = 'https://nominatim.openstreetmap.org/reverse?lat=' + lat + '&lon=' + lon + '&format=json&addressdetails=1';
            console.log('API URL:', apiUrl);

            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    if (data && data.address) {
                        console.log('Full Address Data:', data.address); // Log full data for inspection

                        const street = data.address.road || 'Street not found';
                        const city = data.address.city || data.address.town || data.address.village || 'City not found';
                        const state = data.address.state || 'State not found';
                        const country = data.address.country || 'Country not found';
                        const postalCode = data.address.postcode || 'Postal code not found';

                        // Using string concatenation
                        const fullAddress = street + ', ' + city + ', ' + state + ', ' + country + ', ' + postalCode;
                        document.getElementById('location').value = fullAddress;

                        console.log('Full Address:', fullAddress);
                    } else {
                        // Handle cases where no address information is found
                        document.getElementById('location').value = 'No detailed address found for this location.';
                        console.log('No address data found for these coordinates.');
                    }
                })
                .catch(error => {
                    console.error('Error fetching address:', error);
                    document.getElementById('location').value = 'Error fetching address';
                });
        });
    </script>
</body>
</html>
    